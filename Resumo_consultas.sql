-- FILTROS / ORDENAÇÃO

SELECT * FROM [ITENS NOTAS FISCAIS]

SELECT [CPF] , [NOME]
FROM [TABELA DE CLIENTES]

SELECT TOP 3 * FROM [NOTAS FISCAIS]
ORDER BY DATA DESC

SELECT [NOME DO PRODUTO] AS PRODUCT, [TAMANHO] AS SIZE
FROM [TABELA DE PRODUTOS]

-- WHERE CONSULTAS POR ANO, MÊS, DIA, MAIOR, MENOR, IGUAL, DIFERENTE

SELECT CPF, NOME, [DATA DE NASCIMENTO] FROM [TABELA DE CLIENTES]
WHERE YEAR([DATA DE NASCIMENTO]) = 1995

SELECT * 
FROM [TABELA DE PRODUTOS] 
WHERE [PREÇO DE LISTA] <= 4.555

SELECT * 
FROM [TABELA DE PRODUTOS] 
WHERE [PREÇO DE LISTA] >= 4.555

SELECT * 
FROM [TABELA DE PRODUTOS] 
WHERE EMBALAGEM <= 'Lata'

SELECT * 
FROM [TABELA DE PRODUTOS] 
WHERE EMBALAGEM <> 'Lata'

SELECT * 
FROM [TABELA DE CLIENTES] 
WHERE [DATA DE NASCIMENTO] = '1995-09-11'

SELECT * 
FROM [TABELA DE CLIENTES] 
WHERE [DATA DE NASCIMENTO] >= '1995-09-11'

SELECT * 
FROM [TABELA DE CLIENTES] 
WHERE [DATA DE NASCIMENTO] <= '1995-09-11'

SELECT * 
FROM [TABELA DE CLIENTES] 
WHERE YEAR([DATA DE NASCIMENTO]) = 1995 

SELECT * 
FROM [TABELA DE CLIENTES] 
WHERE YEAR([DATA DE NASCIMENTO]) < 1995 

SELECT * 
FROM [TABELA DE CLIENTES] 
WHERE MONTH([DATA DE NASCIMENTO]) = 12

SELECT * 
FROM [TABELA DE CLIENTES] 
WHERE DAY([DATA DE NASCIMENTO]) = 11


-- WHERE CONSULTAS CONDICIONAIS

SELECT * FROM [TABELA DE PRODUTOS] 
WHERE [SABOR] = 'Manga' OR [TAMANHO] = '700 ml'

SELECT * FROM [TABELA DE PRODUTOS] 
WHERE [SABOR] = 'Manga' AND [TAMANHO] = '700 ml'

SELECT * FROM [TABELA DE PRODUTOS] 
WHERE [SABOR] = 'Manga' AND NOT ( [TAMANHO] = '700 ml')

SELECT * FROM [TABELA DE PRODUTOS] 
WHERE [SABOR] IN ('Manga', 'Laranja')

SELECT * FROM [TABELA DE PRODUTOS] 
WHERE [SABOR] IN ('Manga', 'Laranja') AND [PREÇO DE LISTA] > 10

SELECT * FROM [TABELA DE PRODUTOS] 
WHERE [SABOR] IN ('Manga', 'Laranja') AND [PREÇO DE LISTA] BETWEEN 10 AND 13

SELECT * FROM [TABELA DE PRODUTOS] 
WHERE [SABOR] IN ('Manga', 'Laranja') AND [PREÇO DE LISTA] >= 10 AND [PREÇO DE LISTA] <= 13

SELECT COUNT(*)  
FROM [ITENS NOTAS FISCAIS] 
WHERE [QUANTIDADE] > 60 AND [PREÇO] <= 3

-- LIKE CONSULTA POR PARTE DE STRING

SELECT * FROM [TABELA DE PRODUTOS] 
WHERE [NOME DO PRODUTO] LIKE '%Litros%'

SELECT * FROM [TABELA DE PRODUTOS] 
WHERE [NOME DO PRODUTO] LIKE 'Litros%'

SELECT * FROM [TABELA DE PRODUTOS] 
WHERE [NOME DO PRODUTO] LIKE '%Litros%' AND [SABOR] = 'Laranja'

-- DISTINCT (QUANTAS COMBINAÇÕES ENTRE CAMPOS EXISTEM)

SELECT [NOME DO PRODUTO], EMBALAGEM, TAMANHO 
FROM [TABELA DE PRODUTOS]

SELECT DISTINCT EMBALAGEM, TAMANHO 
FROM [TABELA DE PRODUTOS]

SELECT DISTINCT EMBALAGEM, TAMANHO 
FROM [TABELA DE PRODUTOS] 
WHERE [SABOR] = 'Laranja'

-- ORDENANDO A SAÍDA DA CONSULTA

SELECT NOME, ESTADO, [LIMITE DE CREDITO]
FROM [TABELA DE CLIENTES]
ORDER BY [LIMITE DE CREDITO]

SELECT [EMBALAGEM], [NOME DO PRODUTO] 
FROM [TABELA DE PRODUTOS] 
ORDER BY [EMBALAGEM] DESC, [NOME DO PRODUTO] ASC

SELECT * FROM [ITENS NOTAS FISCAIS] 
WHERE [CODIGO DO PRODUTO] = '1101035'
ORDER BY QUANTIDADE DESC


-- FUNÇÕES DE AGREGAÇÃO

SELECT ESTADO, SUM([LIMITE DE CREDITO])
FROM [TABELA DE CLIENTES]
GROUP BY ESTADO

-- SUM FUNÇÃO DE AGREGAÇÃO COM FILTRO

SELECT BAIRRO, ESTADO, SUM([LIMITE DE CREDITO]) 
FROM [TABELA DE CLIENTES]
WHERE [ESTADO]  = 'SP' 
GROUP BY BAIRRO, ESTADO

-- FUNÇÕES DE AGREGAÇÃO (FILTRO DA AGREGAÇÃO COM HAVING OU COM SUB CONSULTA)

SELECT BAIRRO, ESTADO, SUM([LIMITE DE CREDITO]) AS SOMA_LIMITE
FROM [TABELA DE CLIENTES]
WHERE ESTADO = 'SP' 
GROUP BY BAIRRO, ESTADO
HAVING SUM([LIMITE DE CREDITO]) >= 140000

SELECT *
FROM (SELECT BAIRRO, ESTADO, SUM([LIMITE DE CREDITO]) AS SOMA_LIMITE
FROM [TABELA DE CLIENTES]
WHERE ESTADO = 'SP' 
GROUP BY BAIRRO, ESTADO) AS AGGSP
WHERE SOMA_LIMITE >= 140000

-- AVG MAX MIN COUNT FUNÇÕES DE AGREGAÇÃO

SELECT ESTADO, AVG([LIMITE DE CREDITO])
FROM [TABELA DE CLIENTES]
GROUP BY ESTADO

SELECT EMBALAGEM, MAX([PREÇO DE LISTA])
FROM [TABELA DE PRODUTOS]
GROUP BY EMBALAGEM

SELECT TAMANHO, MIN([PREÇO DE LISTA])
FROM [TABELA DE PRODUTOS]
GROUP BY TAMANHO

SELECT EMBALAGEM, COUNT(*) AS QUANTIDADE FROM [TABELA DE PRODUTOS] GROUP BY EMBALAGEM

SELECT YEAR(DATA) AS ANO, MONTH(DATA) AS MÊS , COUNT(DISTINCT NUMERO) AS VENDAS
FROM [NOTAS FISCAIS]
GROUP BY YEAR(DATA), MONTH(DATA)
ORDER BY YEAR(DATA), MONTH(DATA), VENDAS DESC

-- CASE WHEN CLASSIFICAR RESULTADOS

SELECT [NOME DO PRODUTO], [PREÇO DE LISTA],
CASE WHEN [PREÇO DE LISTA] >= 12 THEN 'PRODUTO CARO'
WHEN [PREÇO DE LISTA] >= 7 AND [PREÇO DE LISTA] < 12 THEN 'PRODUTO EM CONTA'
ELSE 'PRODUTO BARATO' END AS CLASSIFICAÇÃO
FROM [TABELA DE PRODUTOS]
ORDER BY CLASSIFICAÇÃO

-- CLASSIFICAR RESULTADOS JUNTO COM FUNÇÃO DE GROUP BY

SELECT [NOME DO PRODUTO],
CASE WHEN [PREÇO DE LISTA] >= 12 THEN 'PRODUTO CARO'
WHEN [PREÇO DE LISTA] >= 7 AND [PREÇO DE LISTA] < 12 THEN 'PRODUTO EM CONTA'
ELSE 'PRODUTO BARATO' END AS CLASSIFICAÇÃO,
AVG([PREÇO DE LISTA]) AS MÉDIA
FROM [TABELA DE PRODUTOS]
GROUP BY [NOME DO PRODUTO],
CASE WHEN [PREÇO DE LISTA] >= 12 THEN 'PRODUTO CARO'
WHEN [PREÇO DE LISTA] >= 7 AND [PREÇO DE LISTA] < 12 THEN 'PRODUTO EM CONTA'
ELSE 'PRODUTO BARATO' END
ORDER BY CLASSIFICAÇÃO

-- JUNTAR TABELAS

SELECT * FROM [TABELA DE VENDEDORES]
INNER JOIN [NOTAS FISCAIS] ON [TABELA DE VENDEDORES].MATRICULA = [NOTAS FISCAIS].MATRICULA

SELECT TV.MATRICULA, TV.[NOME], YEAR(DATA), COUNT(*) AS QUANTIDADE_VENDAS
FROM [TABELA DE VENDEDORES] AS TV
INNER JOIN [NOTAS FISCAIS] AS NF ON TV.MATRICULA = NF.MATRICULA
GROUP BY TV.MATRICULA, TV.[NOME], YEAR(DATA)
ORDER BY TV.NOME, YEAR(DATA) DESC

SELECT [TABELA DE CLIENTES].[NOME], COUNT(*) AS QUANTIDADE_COMPRAS
FROM [TABELA DE CLIENTES] 
INNER JOIN [NOTAS FISCAIS] ON [TABELA DE CLIENTES].CPF = [NOTAS FISCAIS].CPF
GROUP BY [TABELA DE CLIENTES].[NOME]

-- LEFT JOIN TRAZER A TODOS OS REGISTROS DA TB DA ESQUERDA E SOMENTE OS REGISTROS DA CONDIÇÃO DA TB DA DIREITA

SELECT * FROM [TABELA DE CLIENTES]

SELECT [TABELA DE CLIENTES].[NOME], COUNT(*) AS QUANTIDADE_COMPRAS
FROM [TABELA DE CLIENTES] 
LEFT JOIN [NOTAS FISCAIS] ON [TABELA DE CLIENTES].CPF = [NOTAS FISCAIS].CPF
GROUP BY [TABELA DE CLIENTES].[NOME]

-- FULL JOIN TRAZ TUDO DE TODAS AS TABELAS

SELECT [TABELA DE VENDEDORES].BAIRRO AS BAIRRO_VENDEDOR, [TABELA DE VENDEDORES].[NOME] AS NOME_VENDEDOR,  
[TABELA DE CLIENTES].BAIRRO BAIRRO_CLIENTE, [TABELA DE CLIENTES].[NOME] AS NOME_CLIENTE
FROM [TABELA DE VENDEDORES] 
FULL JOIN [TABELA DE CLIENTES] ON [TABELA DE VENDEDORES].BAIRRO = [TABELA DE CLIENTES].BAIRRO

SELECT DISTINCT [TABELA DE CLIENTES].[BAIRRO], [TABELA DE CLIENTES].[NOME], 'CLIENTE' 
FROM [TABELA DE CLIENTES]
UNION ALL
SELECT DISTINCT [TABELA DE VENDEDORES].BAIRRO, [TABELA DE VENDEDORES].[NOME], 'VENDEDOR' 
FROM [TABELA DE VENDEDORES]

-- SELECT FROM OUTRO SELECT: SUB CONSULTAS

SELECT NOVA_CONSULTA.EMBALAGEM, NOVA_CONSULTA.MAX_PRECO
FROM (SELECT EMBALAGEM, MAX([PREÇO DE LISTA]) AS MAX_PRECO 
FROM [TABELA DE PRODUTOS] 
GROUP BY EMBALAGEM) NOVA_CONSULTA
WHERE NOVA_CONSULTA.MAX_PRECO <= 5

-- CRIAR UMA VIEW/ VISÕES DE UMA CONSULTA

SELECT EMBALAGEM, MAX([PREÇO DE LISTA]) AS MAX_PRECO 
FROM [TABELA DE PRODUTOS] 
GROUP BY EMBALAGEM

SELECT * FROM [dbo].[VW_EMBALAGENS]

-- CONSULTAR STRINGS 

SELECT LTRIM('      OLA')
SELECT RTRIM('OLA      ')
SELECT CONCAT('OLA ','TUDO BEM')
SELECT 'OLA ' + 'TUDO BEM'
SELECT LEFT('RUA AUGUSTA',3) 
SELECT RIGHT('RUA AUGUSTA',7) 
SELECT UPPER('rua augusta')   
SELECT LOWER('RUA AUGUSTA')   
SELECT REPLACE('R. AUGUSTA','R.','RUA') 
SELECT SUBSTRING('RUA AUGUSTA', 1, 3) 
SELECT SUBSTRING('RUA AUGUSTA', 2, 4) 
SELECT LEN('RUA AUGUSTA')  

SELECT * FROM [TABELA DE CLIENTES]

SELECT CONCAT(NOME, ' (', CPF, ') ') FROM [TABELA DE CLIENTES]

-- FUNÇÕES DE DATA

SELECT SYSDATETIME()
SELECT SYSDATETIMEOFFSET()
SELECT SYSUTCDATETIME()
SELECT CURRENT_TIMESTAMP
SELECT GETDATE()
SELECT GETUTCDATE()
SELECT DATENAME(YEAR,GETDATE())
SELECT DATENAME(MICROSECOND,GETDATE())
SELECT DATENAME(WEEKDAY,GETDATE())
SELECT DATENAME(MONTH,GETDATE())
SELECT DATEPART(MONTH,GETDATE())
SELECT DAY(GETDATE())
SELECT YEAR(GETDATE())
SELECT DATEFROMPARTS(2015,9,1)
SELECT DATENAME(MONTH,DATEFROMPARTS(2015,9,1))
SELECT DATETIME2FROMPARTS(2015,9,1,13,12,11,120,4)
SELECT DATEDIFF(MONTH, DATEFROMPARTS(2015,9,1), GETDATE())
SELECT DATEDIFF(DAY, DATEFROMPARTS(2015,9,1), GETDATE())
SELECT DATEADD(MONTH, 4, GETDATE())
SELECT DATEADD(DAY, 4, GETDATE())
SELECT ISDATE('2018-01-01')
SELECT ISDATE('2018-25-28')

SELECT * FROM [NOTAS FISCAIS]

SELECT [DATA], CONCAT(DATENAME(DAY, [DATA]), ' ', DATENAME(MONTH, [DATA]), ' ', DATENAME(YEAR, [DATA]))
FROM [NOTAS FISCAIS]

SELECT NOME, [DATA DE NASCIMENTO] ,IDADE, DATEDIFF(YEAR, [DATA DE NASCIMENTO], GETDATE()) AS IDADEATUAL
FROM [TABELA DE CLIENTES]

SELECT NOME, [DATA DE NASCIMENTO], IDADE - DATEDIFF(YEAR, [DATA DE NASCIMENTO], GETDATE()) AS DIFERENÇA
FROM [TABELA DE CLIENTES]

SELECT DATEDIFF(MONTH, '2020-06-05', GETDATE())

-- FUNÇÕES MATEMÁTICAS

SELECT CEILING(12.333223)
SELECT FLOOR(12.333223)
SELECT RAND()
SELECT ROUND(12.33323323, 2)

SELECT * FROM [ITENS NOTAS FISCAIS]

SELECT [QUANTIDADE], [PREÇO], ROUND(([QUANTIDADE] * [PREÇO]),1) 
FROM [ITENS NOTAS FISCAIS]

-- CONVERSÃO DE DADOS

SELECT CONVERT(VARCHAR, GETDATE(), 102)

SELECT CONVERT(VARCHAR, GETDATE(), 113)

SELECT CONVERT(VARCHAR, GETDATE(), 130)

SELECT CONVERT(decimal(10,5), 193.57)

SELECT * FROM [TABELA DE PRODUTOS]

SELECT 'O preço do produto ' + [NOME DO PRODUTO] + ' é ' +  [PREÇO DE LISTA] 
FROM [TABELA DE PRODUTOS]

SELECT 'O preço do produto ' + [NOME DO PRODUTO] + ' é ' +  CONVERT(VARCHAR, [PREÇO DE LISTA]) 
FROM [TABELA DE PRODUTOS]

SELECT 'O Cliente ' + [NOME] + ' faturou ' + CONVERT(VARCHAR, [VOLUME DE COMPRA]) + ' no ano de 2016 '
FROM [TABELA DE CLIENTES]

-- CONSULTAR O TOTAL FATURADO PARA CADA CLIENTE NO ANO DE 2016

SELECT YEAR(DATA), CPF, SUM(QUANTIDADE * PREÇO) AS FATURAMENTO
FROM [NOTAS FISCAIS] NF
INNER JOIN [ITENS NOTAS FISCAIS] INF ON NF.NUMERO = INF.NUMERO
WHERE YEAR(DATA) = 2016
GROUP BY YEAR(DATA), CPF

SELECT CONCAT('O Cliente ', TC.NOME, ' faturou ', 
CONVERT(VARCHAR, CONVERT(DECIMAL(15,2), SUM(INF.QUANTIDADE * INF.[PREÇO]))), ' no ano de ' , 
CONVERT(VARCHAR, YEAR(NF.DATA))) AS SENTENÇA 
FROM [NOTAS FISCAIS] AS NF
INNER JOIN [ITENS NOTAS FISCAIS] INF ON NF.NUMERO = INF.NUMERO
INNER JOIN [TABELA DE CLIENTES] AS TC ON NF.CPF = TC.CPF
WHERE YEAR(DATA) = 2016
GROUP BY TC.NOME, YEAR(DATA)

-- CONSULTAR QUANTO FOI PAGO DE IMPOSTO NO ANO DE 2016

SELECT YEAR(DATA), FLOOR(SUM(IMPOSTO * (QUANTIDADE * PREÇO))) 
FROM [NOTAS FISCAIS] NF
INNER JOIN [ITENS NOTAS FISCAIS] INF ON NF.NUMERO = INF.NUMERO
WHERE YEAR(DATA) = 2016
GROUP BY YEAR(DATA)

-- CONSULTAR O TOTAL DE VENDAS POR VENDEDOR POR ANO

SELECT *
FROM [TABELA DE VENDEDORES] AS TV
INNER JOIN [NOTAS FISCAIS] AS NF ON TV.MATRICULA = NF.MATRICULA
INNER JOIN [ITENS NOTAS FISCAIS] AS INF ON NF.NUMERO = INF.NUMERO
WHERE TV.MATRICULA = '00236'

SELECT TV.MATRICULA, TV.[NOME], YEAR(DATA) AS ANO, COUNT(DISTINCT NF.NUMERO) AS QUANTIDADE_VENDAS, SUM(INF.QUANTIDADE * INF.PREÇO) AS FATURAMENTO
FROM [TABELA DE VENDEDORES] AS TV
INNER JOIN [NOTAS FISCAIS] AS NF ON TV.MATRICULA = NF.MATRICULA
INNER JOIN [ITENS NOTAS FISCAIS] INF ON NF.NUMERO = INF.NUMERO
GROUP BY TV.MATRICULA, TV.[NOME], YEAR(DATA)
ORDER BY TV.NOME, YEAR(DATA) 

-- CONSULTAR FATURAMENTO POR ANO, SABOR E PARTICIPAÇÃO

SELECT AUX1.SABOR, AUX1.ANO, CONVERT(DECIMAL(15,2), AUX1.FATURAMENTO) AS FATURAMENTO, CONVERT(VARCHAR, CONVERT(DECIMAL(15,2),((AUX1.FATURAMENTO/AUX2.TOTAL) * 100),2)) + ' %' AS PERCENTUAL
FROM
(SELECT TP.SABOR, YEAR(NF.DATA) AS ANO, SUM(INF.QUANTIDADE * INF.PREÇO) AS FATURAMENTO
FROM [ITENS NOTAS FISCAIS] AS INF
INNER JOIN [NOTAS FISCAIS] AS NF ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS] AS TP ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR(NF.DATA) = 2016
GROUP BY TP.SABOR, YEAR(DATA)) AUX1
INNER JOIN
(SELECT YEAR(NF.DATA) AS ANO, SUM(INF.QUANTIDADE * INF.PREÇO) AS TOTAL
FROM [ITENS NOTAS FISCAIS] AS INF
INNER JOIN [NOTAS FISCAIS] AS NF ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS] AS TP ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR(NF.DATA) = 2016
GROUP BY YEAR(DATA)) AUX2
ON AUX1.ANO = AUX2.ANO
ORDER BY AUX1.FATURAMENTO DESC

-- CONSULTAR FATURAMENTO ANO, TAMANHO E PARTICIPAÇÃO

SELECT AUX1.TAMANHO, AUX1.ANO, CONVERT(DECIMAL(15,2), AUX1.FATURAMENTO) AS FATURAMENTO, CONVERT(VARCHAR, CONVERT(DECIMAL(15,2),((AUX1.FATURAMENTO/AUX2.TOTAL) * 100),2)) + ' %' AS PERCENTUAL
FROM
(SELECT TP.TAMANHO, YEAR(NF.DATA) AS ANO, SUM(INF.QUANTIDADE * INF.PREÇO) AS FATURAMENTO
FROM [ITENS NOTAS FISCAIS] AS INF
INNER JOIN [NOTAS FISCAIS] AS NF ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS] AS TP ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR(NF.DATA) = 2016
GROUP BY TP.TAMANHO, YEAR(DATA)) AUX1
INNER JOIN
(SELECT YEAR(NF.DATA) AS ANO, SUM(INF.QUANTIDADE * INF.PREÇO) AS TOTAL
FROM [ITENS NOTAS FISCAIS] AS INF
INNER JOIN [NOTAS FISCAIS] AS NF ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE PRODUTOS] AS TP ON INF.[CODIGO DO PRODUTO] = TP.[CODIGO DO PRODUTO]
WHERE YEAR(NF.DATA) = 2016
GROUP BY YEAR(DATA)) AUX2
ON AUX1.ANO = AUX2.ANO
ORDER BY AUX1.FATURAMENTO DESC